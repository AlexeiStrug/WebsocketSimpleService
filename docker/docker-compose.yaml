version: "3"

services:
  app:
    build: ../.
    container_name: simple-websocket-service
    environment:
      - spring.datasource.url=jdbc:postgresql://db:5432/test
      - spring.datasource.username=postgres
      - spring.datasource.password=postgres
      - SPRING_KAFKA_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - 8080:8080
    depends_on:
      - db
      - zookeeper
      - kafka
    networks:
      - simple-docker-network

  db:
    image: 'postgres:latest'
    container_name: db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=test
      - PGDATA=/var/lib/postgresql/data/pgdata
    ports:
      - 5432:5432
  #    volumes:
  #      - db_data:/var/lib/postgresql/data
    networks:
      - simple-docker-network

  zookeeper:
    image: 'confluentinc/cp-zookeeper:latest'
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - simple-docker-network

  kafka:
    image: 'confluentinc/cp-kafka:latest'
    container_name: kafka
    ports:
      - 9092:9092
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=false
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
    networks:
      - simple-docker-network

volumes:
  db_data:

networks:
  simple-docker-network:
    driver: bridge